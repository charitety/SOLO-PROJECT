{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CaridadRoblesCarvaja\\\\Code\\\\solo-project\\\\client\\\\src\\\\pages\\\\SongDirectory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./SongDirectory.scss\";\n\n//  MAIN GOAL: A search bar to get the title of one song\n// from the database when a country is typed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SongDirectory = () => {\n  _s();\n  const [songs, setsongs] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Used inside addNewsong() function\n  let navigate = useNavigate();\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api\").then(response => response.json()).then(data => {\n      // console.log(data)\n\n      setsongs(data);\n    });\n  }, []);\n  const selectRandomSong = () => {\n    const randomsongIndex = Math.floor(Math.random() * songs.length);\n    const randomsong = songs[randomsongIndex];\n    alert(`The turn is for ${randomsong.first_name}`);\n  };\n  const filtersongs = songs.filter(song => {\n    var _song$first_name, _song$last_name;\n    return ((_song$first_name = song.first_name) === null || _song$first_name === void 0 ? void 0 : _song$first_name.toLowerCase().includes(searchQuery.toLowerCase())) || ((_song$last_name = song.last_name) === null || _song$last_name === void 0 ? void 0 : _song$last_name.toLowerCase().includes(searchQuery.toLowerCase()));\n  });\n\n  // Used in button to navigate to add new song form (see AddSong component)\n  const addNewSong = () => {\n    navigate(\"/AddSong\");\n  };\n  const handleDeletesong = deletedsong => {\n    // console.log(\"f: \", deletedsong.song_id);\n    fetch(`http://localhost/song/${deletedsong.song_id}`, {\n      method: \"DELETE\"\n    });\n    const deletesongs = songs.filter(song => song.song_id !== deletedsong.song_id);\n    setsongs(deletesongs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SongDirectory\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectAddSearch\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"select\",\n        onClick: selectRandomSong,\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add\",\n        onClick: () => addNewSong(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search a country\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), \" \", \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"directoryHeading\",\n      children: \"Song Directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: filtersongs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid_item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flip-card-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flip-card-front\",\n            children: song.prof_pic.length < 50 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: process.env.PUBLIC_URL + song.prof_pic,\n              alt: song.first_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: song.prof_pic,\n              alt: song.first_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flip-card-back\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [song.first_name, \" \", song.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeletesong(song),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, song.song_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SongDirectory, \"5fgzrT68KTPkCYhZ9rPUFk0KRnU=\", false, function () {\n  return [useNavigate];\n});\n_c = SongDirectory;\nvar _c;\n$RefreshReg$(_c, \"SongDirectory\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","SongDirectory","_s","songs","setsongs","searchQuery","setSearchQuery","navigate","fetch","then","response","json","data","selectRandomSong","randomsongIndex","Math","floor","random","length","randomsong","alert","first_name","filtersongs","filter","song","_song$first_name","_song$last_name","toLowerCase","includes","last_name","addNewSong","handleDeletesong","deletedsong","song_id","method","deletesongs","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","map","prof_pic","src","process","env","PUBLIC_URL","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/CaridadRoblesCarvaja/Code/solo-project/client/src/pages/SongDirectory.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./SongDirectory.scss\";\n\n//  MAIN GOAL: A search bar to get the title of one song\n// from the database when a country is typed\n\nexport const SongDirectory = () => {\n  const [songs, setsongs] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Used inside addNewsong() function\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api\")\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log(data)\n\n        setsongs(data);\n      });\n  }, []);\n\n  const selectRandomSong = () => {\n    const randomsongIndex = Math.floor(Math.random() * songs.length);\n    const randomsong = songs[randomsongIndex];\n    alert(`The turn is for ${randomsong.first_name}`);\n  };\n\n  const filtersongs = songs.filter(\n    (song) =>\n      song.first_name?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      song.last_name?.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  // Used in button to navigate to add new song form (see AddSong component)\n  const addNewSong = () => {\n    navigate(\"/AddSong\");\n  };\n\n  const handleDeletesong = (deletedsong) => {\n    // console.log(\"f: \", deletedsong.song_id);\n    fetch(`http://localhost/song/${deletedsong.song_id}`, {\n      method: \"DELETE\",\n    });\n    const deletesongs = songs.filter(\n      (song) => song.song_id !== deletedsong.song_id\n    );\n    setsongs(deletesongs);\n  };\n\n  return (\n    <div className=\"SongDirectory\">\n      <div className=\"selectAddSearch\">\n        <button id=\"select\" onClick={selectRandomSong}>\n          Select\n        </button>\n        <button id=\"add\" onClick={() => addNewSong()}>\n          Add\n        </button>\n        <input\n          placeholder=\"Search a country\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />{\" \"}\n        {\"  \"}\n      </div>\n      <div className=\"directoryHeading\">Song Directory</div>\n      <div className=\"grid\">\n        {filtersongs.map((song) => (\n          <div className=\"grid_item\" key={song.song_id}>\n            <div className=\"flip-card-inner\">\n              <div className=\"flip-card-front\">\n                {song.prof_pic.length < 50 ? (\n                  <img\n                    src={process.env.PUBLIC_URL + song.prof_pic}\n                    alt={song.first_name}\n                  />\n                ) : (\n                  <img src={song.prof_pic} alt={song.first_name} />\n                )}\n              </div>\n              <div className=\"flip-card-back\">\n                <div>\n                  {song.first_name} {song.last_name}\n                </div>\n                <div>{song.title}</div>\n                <button onClick={() => handleDeletesong(song)}>Delete</button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}